1.java集合框架
    set是一个不包含重复元素的集合，最多只有一个空元素


2.值传递：(形式参数类型是基本数据类型)：方法调用时，
    实际参数把它的值传递给对应的形式参数，
    形式参数只是用实际参数的值初始化自己的存储单元内容，
    是两个不同的存储单元，所以方法执行中形式参数值的改变不影响实际
    参数的值。
  引用传递：(形式参数类型是引用数据类型参数)：也称为传地址。
    方法调用时，实际参数是对象(或数组)，这时实际参数与形式参数
    指向同一个地址， 在方法执行中，对形式参数的操作实际上就是对
    实际参数的操作，这个结果在方法结束后被保留了下来， 所以方法
    执行中形式参数的改变将会影响实际参数

3.数据转换，数据绑定，数据格式化

4.运行时数据区包括:虚拟机栈区，堆区，方法区，本地方法栈，程序计数器。
    虚拟机堆区：栈区，线程私有，存放基本类型，对象的引用和 returnAddress ，
        在编译期间完成分配。
    堆区 ， JAVA 堆，也称 GC 堆，所有线程共享，存放对象的实例和数组， JAVA 堆
        是垃圾收集器管理的主要区域。
    方法区 ：所有线程共享，存储已被虚拟机加载的类信息，常量，静态变量，
        即时编译器编译后的代码等数据。这个区域的内存回收目标主要是
        针对常量池的对象的回收和对类型的卸载。
    程序计数器 ：线程私有，每个线程都有自己独立的程序计数器，用来
        指示下一条指令的地址。

5.java初始化过程： 
    1). 初始化父类中的静态成员变量和静态代码块 ； 
    2). 初始化子类中的静态成员变量和静态代码块 ； 
    3).初始化父类的普通成员变量和代码块，再执行父类的构造方法；
    4).初始化子类的普通成员变量和代码块，再执行子类的构造方法； 

6.stringbuffer,线程安全的可变string对象
    stringbuilder,线程不安全的可变string对象

7.强引用 软引用 弱引用 虚引用

8.ConcurrentHashMap的工作机制:通过把整个Map分为N个Segment（类似HashTable），
    可以提供相同的线程安全，但是效率提升N倍，默认提升16倍

9.session和cookie

10,哈希表是一种查找算法，与链表、树等算法不同的是，散列表算法在查找时不需要进行
    一系列和关键字（关键字是数据元素中某个数据项的值，用以标识一个数据元素）的比较操作

11.位运算符
    (1).and运算 &:相同数位的两个数字都为1，则为1；有一个不为1则为0
    (2).or运算 |:相同数位的两个数字任意一个为1，则为1；全为0则为0
    (3).not运算 ~:对该数位上的数字取反值。1->0,0->1
    (4).xor运算 ^:相同数位上的两个数字相同则取0,不同则取1
    (5).shl运算 <<:a<<b即为在a后面添加b个0;实质上是a乘2的b次方
    (6).shr运算 >>:a>>b即为在a后面删掉b个0;实质上是a除2的b次方

12.java关键字
    volatile：该关键字修饰的变量会使编译器每次都从内存中读取最新的值，
        防止编译器在多线程环境下忽略其他线程对该变量的改变
        
    synchronized：该关键字修饰的对象在多线程环境下，同一时刻只能被一个线程访问

    transient:该关键字修饰的对象在序列化是不会被序列化

13.java内存模型

14.java读取文件目录问题：
    需要从src开始一直到文件的位置,比如src/com/wang/test/1.txt

15.java反射机制
